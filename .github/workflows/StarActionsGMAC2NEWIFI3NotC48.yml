name: StarActionsGMAC2NEWIFI3NotC48
# 开启GMAC2的NEWIFI3编译脚本(仅适用于拆除C48电容的NEWIFI3)

on: 
# 点击☆Star开始编译
  watch:
    types: [started]
# 新建Release开始编译
  release:
    types: [published]

env:
      images_dir: /opt/images

jobs:
  build:
    name: build
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
    strategy:
      matrix:
        include:
          - build_variant: "GMAC2"
            targets: "NEWIFI3"
    steps:
      - uses: actions/checkout@v4
      - name: Prepare environment
        run: |
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext help2man
      - name: Config and Custom
        run: |
          cd ${GITHUB_WORKSPACE}/trunk
          sed -i '/FIRMWARE_BUILDS_VER=/d' versions.inc
          sed -i '/FIRMWARE_BUILDS_REV=/d' versions.inc
          echo "FIRMWARE_BUILDS_VER=$(date +%Y)" >> versions.inc
          echo "FIRMWARE_BUILDS_REV=$(date +%j%H)" >> versions.inc
          echo "FIRMWARE_BUILDS_RMD=$(date +%m%d)" >> versions.inc
          FIRMWARE_BUILDS_VER=$(cat versions.inc | grep "FIRMWARE_BUILDS_VER")
          FIRMWARE_BUILDS_REV=$(cat versions.inc | grep "FIRMWARE_BUILDS_REV")
          FIRMWARE_BUILDS_RMD=$(cat versions.inc | grep "FIRMWARE_BUILDS_RMD")
          FB_VER=${FIRMWARE_BUILDS_VER:20} && echo "VER=${FB_VER}" >> $GITHUB_ENV
          FB_REV=${FIRMWARE_BUILDS_REV:20} && echo "REV=${FB_REV}" >> $GITHUB_ENV
          FB_RMD=${FIRMWARE_BUILDS_RMD:20} && echo "RMD=${FB_RMD}" >> $GITHUB_ENV
          for m in $targets; do
          cd ${GITHUB_WORKSPACE}/trunk/configs/boards/$m
          sed -i 's/# CONFIG_RAETH_GMAC2 is not set/CONFIG_RAETH_GMAC2=y/g' kernel-3.4.x.config
          cat kernel-3.4.x.config | grep "CONFIG_RAETH_GMAC2" || exit 1
          sed -i 's/# CONFIG_GE2_RGMII_FORCE_1000 is not set/CONFIG_GE2_RGMII_FORCE_1000=y/g' kernel-3.4.x.config
          cat kernel-3.4.x.config | grep "CONFIG_GE2_RGMII_FORCE_1000" || exit 1
          sed -i 's/# CONFIG_GE2_INTERNAL_GMAC_P5 is not set/CONFIG_GE2_INTERNAL_GMAC_P5=y/g' kernel-3.4.x.config
          cat kernel-3.4.x.config | grep "CONFIG_GE2_INTERNAL_GMAC_P5" || exit 1
          sed -i 's/# CONFIG_RAETH_BOTH_GMAC is not set/CONFIG_RAETH_BOTH_GMAC=y/g' kernel-3.4.x.config
          cat kernel-3.4.x.config | grep "CONFIG_RAETH_BOTH_GMAC" || exit 1
          done
      - name: Run shellcheck
        run: sh ./trunk/tools/shellcheck.sh
      - name: Prepare toolchain
        run: |
          cd toolchain-mipsel
          # ./clean_toolchain
          # ./build_toolchain
          sh dl_toolchain.sh
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'yes' }}
        with:
          limit-access-to-actor: true
      - name: Start build
        run: |
          cd trunk
          mkdir -p ${images_dir}
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then pack_name="$(ls images | grep ".zip$" | sed 's/.zip$/_'${build_variant}'/g')" && \
          cp -f images/*.zip ${images_dir}/${pack_name}.zip; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done
      - name: Create archive
        if: ${{ github.event_name != 'release' && success() }}
        run: |
          ls -lh ${images_dir}
          build_targets=$(echo "${targets}" | sed 's/ /_/g')
          image_name="${{ env.VER }}${{ env.RMD }}_${build_variant}_${build_targets}"
          cd ${images_dir}; md5sum *.zip |tee md5sum.txt; 7z a -mx=9 ${image_name}.7z ./*
          echo "image_name=${image_name}" >> $GITHUB_ENV
# Star编译完成的固件到Artifacts下载
      - name: Upload images to Artifact
        if: ${{ github.event_name != 'release' && success() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.image_name }}
          path: ${{ env.images_dir }}/*.7z
# Release编译完成的固件到Releases下载
      - name: Upload images to Releases
        if: ${{ github.event_name == 'release' && success() }}
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.images_dir }}/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
